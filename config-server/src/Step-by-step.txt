1. @EnableDiscoveryClient
2. @EnableConfigServer      - needs Config Server dependencies

3. Config server app.properties
# For local folder. Specify the destination of the directory
spring.cloud.config.server.native.search-locations=C:\\Users\\QC-SDO\\Desktop\\Microservice\\config
spring.profiles.active=native

# Register the application to Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# Optional, default is true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# For git, specify the url of the github repository
#    spring.cloud.config.server.git.uri=
#    spring.cloud.config.server.git.username=
#    spring.cloud.config.server.git.password=

4. Put Config Client depedency to other services
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-config</artifactId>
    </dependency>

5. In the folder (C:\Users\QC-SDO\Desktop\Microservice\config), create a app.properties file per service
    #The client app (e.g., your movie-catalog-service) will use its spring.application.name to decide which file to fetch.
    e.g movie-catalog-service.properties

6. In application.properties of the service, add:
    # Specify where the configurations will be fetch (config server address)
    spring.config.import=optional:configserver:http://localhost:8888

7. Restart the app and verify if the config is being fetched. Check the logs
    Fetching config from server at : http://localhost:8888
    Go to the localhost:8888/SERVICE_NAME/default

Note:
    You can create different profiles such as -dev   -test   etc
    1. Create a file movie-catalog-service-dev.properties
    2. Add the different configurations
    3. You can now verify it through localhost:8888/SERVICE_NAME/PROFILE
            e.g localhost:8888/SERVICE_NAME/dev